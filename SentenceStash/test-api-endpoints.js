import fetch from 'node-fetch';

const BASE_URL = 'http://localhost:5000/api';

console.log('üåê API ÏóîÎìúÌè¨Ïù∏Ìä∏ ÌÖåÏä§Ìä∏ ÏãúÏûë...\n');

async function testAPI() {
  try {
    // 1. Î¨∏Ïû• Î™©Î°ù Ï°∞Ìöå
    console.log('1Ô∏è‚É£ GET /api/sentences - Î¨∏Ïû• Î™©Î°ù Ï°∞Ìöå');
    const sentencesRes = await fetch(`${BASE_URL}/sentences`);
    const sentences = await sentencesRes.json();
    console.log(`‚úÖ Î¨∏Ïû• ${sentences.length}Í∞ú Ï°∞Ìöå ÏÑ±Í≥µ`);
    if (sentences.length > 0) {
      console.log('   Ï≤´ Î≤àÏß∏ Î¨∏Ïû•:', sentences[0].content.substring(0, 50) + '...');
    }
    console.log('');

    // 2. ÏÇ¨Ïö©Ïûê ÌöåÏõêÍ∞ÄÏûÖ ÌÖåÏä§Ìä∏
    console.log('2Ô∏è‚É£ POST /api/auth/register - ÌöåÏõêÍ∞ÄÏûÖ');
    const registerRes = await fetch(`${BASE_URL}/auth/register`, {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify({
        email: `apitest${Date.now()}@test.com`,
        password: 'Test123!@#',
        nickname: 'APIÌÖåÏä§ÌÑ∞'
      })
    });
    const registerData = await registerRes.json();
    console.log(`‚úÖ ÌöåÏõêÍ∞ÄÏûÖ ÏùëÎãµ:`, registerData.success ? 'ÏÑ±Í≥µ' : registerData.error);
    console.log('');

    // 3. Î°úÍ∑∏Ïù∏ ÌÖåÏä§Ìä∏
    console.log('3Ô∏è‚É£ POST /api/auth/login - Î°úÍ∑∏Ïù∏');
    const loginRes = await fetch(`${BASE_URL}/auth/login`, {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify({
        email: 'demo@example.com',
        password: 'demo123'
      })
    });
    const loginData = await loginRes.json();
    console.log(`‚úÖ Î°úÍ∑∏Ïù∏ ÏùëÎãµ:`, loginData.user ? `ÏÑ±Í≥µ (ÏÇ¨Ïö©Ïûê: ${loginData.user.nickname})` : 'Ïã§Ìå®');
    console.log('');

    // 4. Ï±Ö Í≤ÄÏÉâ ÌÖåÏä§Ìä∏
    console.log('4Ô∏è‚É£ GET /api/books/search - Ï±Ö Í≤ÄÏÉâ');
    const booksRes = await fetch(`${BASE_URL}/books/search?query=ÌÖåÏä§Ìä∏`);
    const books = await booksRes.json();
    console.log(`‚úÖ Ï±Ö Í≤ÄÏÉâ Í≤∞Í≥º:`, Array.isArray(books) ? `${books.length}Í∞ú Î∞úÍ≤¨` : 'Í≤ÄÏÉâ Ïã§Ìå®');
    console.log('');

    // 5. Ïª§ÎÆ§ÎãàÌã∞ Î™©Î°ù Ï°∞Ìöå
    console.log('5Ô∏è‚É£ GET /api/communities - Ïª§ÎÆ§ÎãàÌã∞ Î™©Î°ù');
    const communitiesRes = await fetch(`${BASE_URL}/communities`);
    const communities = await communitiesRes.json();
    console.log(`‚úÖ Ïª§ÎÆ§ÎãàÌã∞ ${communities.length}Í∞ú Ï°∞Ìöå ÏÑ±Í≥µ`);
    console.log('');

    // 6. ÌÜµÍ≥Ñ Ï°∞Ìöå
    console.log('6Ô∏è‚É£ GET /api/sentences/stats - ÌÜµÍ≥Ñ Ï°∞Ìöå');
    const statsRes = await fetch(`${BASE_URL}/sentences/stats`);
    const stats = await statsRes.json();
    console.log(`‚úÖ ÌÜµÍ≥Ñ Ï°∞Ìöå ÏÑ±Í≥µ:`, stats);
    console.log('');

    console.log('üéâ Î™®Îì† API ÌÖåÏä§Ìä∏ ÏôÑÎ£å!');
    console.log('\nüí° Î∏åÎùºÏö∞Ï†ÄÏóêÏÑú http://localhost:5000 ÏúºÎ°ú Ï†ëÏÜçÌïòÏó¨ UIÎ•º ÌÖåÏä§Ìä∏Ìï¥Î≥¥ÏÑ∏Ïöî.');

  } catch (error) {
    console.error('‚ùå API ÌÖåÏä§Ìä∏ Ïã§Ìå®:', error.message);
    console.log('\n‚ö†Ô∏è  ÏÑúÎ≤ÑÍ∞Ä Ïã§Ìñâ Ï§ëÏù∏ÏßÄ ÌôïÏù∏ÌïòÏÑ∏Ïöî (npm run dev)');
  }
}

// node-fetch ÏÑ§Ïπò ÌôïÏù∏
import { exec } from 'child_process';
exec('npm list node-fetch', (error, stdout) => {
  if (error || !stdout.includes('node-fetch')) {
    console.log('üì¶ node-fetch ÏÑ§Ïπò Ï§ë...');
    exec('npm install node-fetch', (err) => {
      if (err) {
        console.error('‚ùå node-fetch ÏÑ§Ïπò Ïã§Ìå®');
        process.exit(1);
      }
      testAPI();
    });
  } else {
    testAPI();
  }
});